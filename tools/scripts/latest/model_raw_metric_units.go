/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package latest

import (
	"encoding/json"
	"fmt"
)

// RawMetricUnits Element used to express the quantity. This can be an element of time, storage capacity, and the like.
type RawMetricUnits string

// List of RawMetricUnits
const (
	RAWMETRICUNITS_RAW RawMetricUnits = "RAW"
)

// All allowed values of RawMetricUnits enum
var AllowedRawMetricUnitsEnumValues = []RawMetricUnits{
	"RAW",
}

func (v *RawMetricUnits) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RawMetricUnits(value)
	for _, existing := range AllowedRawMetricUnitsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RawMetricUnits", value)
}

// NewRawMetricUnitsFromValue returns a pointer to a valid RawMetricUnits
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRawMetricUnitsFromValue(v string) (*RawMetricUnits, error) {
	ev := RawMetricUnits(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RawMetricUnits: valid values are %v", v, AllowedRawMetricUnitsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RawMetricUnits) IsValid() bool {
	for _, existing := range AllowedRawMetricUnitsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RawMetricUnits value
func (v RawMetricUnits) Ptr() *RawMetricUnits {
	return &v
}


