/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
	"fmt"
)

// CreatePrivateEndpointRequest - struct for CreatePrivateEndpointRequest
type CreatePrivateEndpointRequest struct {
	CreateAWSEndpointRequest *CreateAWSEndpointRequest
	CreateAzureEndpointRequest *CreateAzureEndpointRequest
	CreateGCPEndpointGroupRequest *CreateGCPEndpointGroupRequest
}

// CreateAWSEndpointRequestAsCreatePrivateEndpointRequest is a convenience function that returns CreateAWSEndpointRequest wrapped in CreatePrivateEndpointRequest
func CreateAWSEndpointRequestAsCreatePrivateEndpointRequest(v *CreateAWSEndpointRequest) CreatePrivateEndpointRequest {
	return CreatePrivateEndpointRequest{
		CreateAWSEndpointRequest: v,
	}
}

// CreateAzureEndpointRequestAsCreatePrivateEndpointRequest is a convenience function that returns CreateAzureEndpointRequest wrapped in CreatePrivateEndpointRequest
func CreateAzureEndpointRequestAsCreatePrivateEndpointRequest(v *CreateAzureEndpointRequest) CreatePrivateEndpointRequest {
	return CreatePrivateEndpointRequest{
		CreateAzureEndpointRequest: v,
	}
}

// CreateGCPEndpointGroupRequestAsCreatePrivateEndpointRequest is a convenience function that returns CreateGCPEndpointGroupRequest wrapped in CreatePrivateEndpointRequest
func CreateGCPEndpointGroupRequestAsCreatePrivateEndpointRequest(v *CreateGCPEndpointGroupRequest) CreatePrivateEndpointRequest {
	return CreatePrivateEndpointRequest{
		CreateGCPEndpointGroupRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreatePrivateEndpointRequest) UnmarshalJSON(data []byte) error {
	var err error
        match := 0
        // try to unmarshal data into CreateAWSEndpointRequest
        err = json.Unmarshal(data, &dst.CreateAWSEndpointRequest)
        if err == nil {
                jsonCreateAWSEndpointRequest, _ := json.Marshal(dst.CreateAWSEndpointRequest)
                if string(jsonCreateAWSEndpointRequest) == "{}" { // empty struct
                        dst.CreateAWSEndpointRequest = nil
                } else {
                        match++
                }
        } else {
                dst.CreateAWSEndpointRequest = nil
        }

        // try to unmarshal data into CreateAzureEndpointRequest
        err = json.Unmarshal(data, &dst.CreateAzureEndpointRequest)
        if err == nil {
                jsonCreateAzureEndpointRequest, _ := json.Marshal(dst.CreateAzureEndpointRequest)
                if string(jsonCreateAzureEndpointRequest) == "{}" { // empty struct
                        dst.CreateAzureEndpointRequest = nil
                } else {
                        match++
                }
        } else {
                dst.CreateAzureEndpointRequest = nil
        }

        // try to unmarshal data into CreateGCPEndpointGroupRequest
        err = json.Unmarshal(data, &dst.CreateGCPEndpointGroupRequest)
        if err == nil {
                jsonCreateGCPEndpointGroupRequest, _ := json.Marshal(dst.CreateGCPEndpointGroupRequest)
                if string(jsonCreateGCPEndpointGroupRequest) == "{}" { // empty struct
                        dst.CreateGCPEndpointGroupRequest = nil
                } else {
                        match++
                }
        } else {
                dst.CreateGCPEndpointGroupRequest = nil
        }

        if match > 1 { // more than 1 match
                // reset to nil
                dst.CreateAWSEndpointRequest = nil
                dst.CreateAzureEndpointRequest = nil
                dst.CreateGCPEndpointGroupRequest = nil

                return fmt.Errorf("data matches more than one schema in oneOf(CreatePrivateEndpointRequest)")
        } else if match == 1 {
                return nil // exactly one match
        } else { // no match
                return fmt.Errorf("data failed to match schemas in oneOf(CreatePrivateEndpointRequest)")
        }
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreatePrivateEndpointRequest) MarshalJSON() ([]byte, error) {
	if src.CreateAWSEndpointRequest != nil {
		return json.Marshal(&src.CreateAWSEndpointRequest)
	}

	if src.CreateAzureEndpointRequest != nil {
		return json.Marshal(&src.CreateAzureEndpointRequest)
	}

	if src.CreateGCPEndpointGroupRequest != nil {
		return json.Marshal(&src.CreateGCPEndpointGroupRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreatePrivateEndpointRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CreateAWSEndpointRequest != nil {
		return obj.CreateAWSEndpointRequest
	}

	if obj.CreateAzureEndpointRequest != nil {
		return obj.CreateAzureEndpointRequest
	}

	if obj.CreateGCPEndpointGroupRequest != nil {
		return obj.CreateGCPEndpointGroupRequest
	}

	// all schemas are nil
	return nil
}

type NullableCreatePrivateEndpointRequest struct {
	value *CreatePrivateEndpointRequest
	isSet bool
}

func (v NullableCreatePrivateEndpointRequest) Get() *CreatePrivateEndpointRequest {
	return v.value
}

func (v *NullableCreatePrivateEndpointRequest) Set(val *CreatePrivateEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePrivateEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePrivateEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePrivateEndpointRequest(val *CreatePrivateEndpointRequest) *NullableCreatePrivateEndpointRequest {
	return &NullableCreatePrivateEndpointRequest{value: val, isSet: true}
}

func (v NullableCreatePrivateEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePrivateEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


