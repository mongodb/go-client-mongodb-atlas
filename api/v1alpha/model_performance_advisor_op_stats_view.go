/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// checks if the PerformanceAdvisorOpStatsView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PerformanceAdvisorOpStatsView{}

// PerformanceAdvisorOpStatsView Details that this resource returned about the specified query.
type PerformanceAdvisorOpStatsView struct {
	// Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds. This parameter relates to the **duration** query parameter.
	Ms *int64 `json:"ms,omitempty"`
	// Number of results that the query returns.
	NReturned *int64 `json:"nReturned,omitempty"`
	// Number of documents that the query read.
	NScanned *int64 `json:"nScanned,omitempty"`
	// Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time). This parameter relates to the **since** query parameter.
	Ts *int64 `json:"ts,omitempty"`
}

// NewPerformanceAdvisorOpStatsView instantiates a new PerformanceAdvisorOpStatsView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformanceAdvisorOpStatsView() *PerformanceAdvisorOpStatsView {
	this := PerformanceAdvisorOpStatsView{}
	return &this
}

// NewPerformanceAdvisorOpStatsViewWithDefaults instantiates a new PerformanceAdvisorOpStatsView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformanceAdvisorOpStatsViewWithDefaults() *PerformanceAdvisorOpStatsView {
	this := PerformanceAdvisorOpStatsView{}
	return &this
}

// GetMs returns the Ms field value if set, zero value otherwise.
func (o *PerformanceAdvisorOpStatsView) GetMs() int64 {
	if o == nil || IsNil(o.Ms) {
		var ret int64
		return ret
	}
	return *o.Ms
}

// GetMsOk returns a tuple with the Ms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceAdvisorOpStatsView) GetMsOk() (*int64, bool) {
	if o == nil || IsNil(o.Ms) {
		return nil, false
	}
	return o.Ms, true
}

// HasMs returns a boolean if a field has been set.
func (o *PerformanceAdvisorOpStatsView) HasMs() bool {
	if o != nil && !IsNil(o.Ms) {
		return true
	}

	return false
}

// SetMs gets a reference to the given int64 and assigns it to the Ms field.
func (o *PerformanceAdvisorOpStatsView) SetMs(v int64) {
	o.Ms = &v
}

// GetNReturned returns the NReturned field value if set, zero value otherwise.
func (o *PerformanceAdvisorOpStatsView) GetNReturned() int64 {
	if o == nil || IsNil(o.NReturned) {
		var ret int64
		return ret
	}
	return *o.NReturned
}

// GetNReturnedOk returns a tuple with the NReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceAdvisorOpStatsView) GetNReturnedOk() (*int64, bool) {
	if o == nil || IsNil(o.NReturned) {
		return nil, false
	}
	return o.NReturned, true
}

// HasNReturned returns a boolean if a field has been set.
func (o *PerformanceAdvisorOpStatsView) HasNReturned() bool {
	if o != nil && !IsNil(o.NReturned) {
		return true
	}

	return false
}

// SetNReturned gets a reference to the given int64 and assigns it to the NReturned field.
func (o *PerformanceAdvisorOpStatsView) SetNReturned(v int64) {
	o.NReturned = &v
}

// GetNScanned returns the NScanned field value if set, zero value otherwise.
func (o *PerformanceAdvisorOpStatsView) GetNScanned() int64 {
	if o == nil || IsNil(o.NScanned) {
		var ret int64
		return ret
	}
	return *o.NScanned
}

// GetNScannedOk returns a tuple with the NScanned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceAdvisorOpStatsView) GetNScannedOk() (*int64, bool) {
	if o == nil || IsNil(o.NScanned) {
		return nil, false
	}
	return o.NScanned, true
}

// HasNScanned returns a boolean if a field has been set.
func (o *PerformanceAdvisorOpStatsView) HasNScanned() bool {
	if o != nil && !IsNil(o.NScanned) {
		return true
	}

	return false
}

// SetNScanned gets a reference to the given int64 and assigns it to the NScanned field.
func (o *PerformanceAdvisorOpStatsView) SetNScanned(v int64) {
	o.NScanned = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *PerformanceAdvisorOpStatsView) GetTs() int64 {
	if o == nil || IsNil(o.Ts) {
		var ret int64
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceAdvisorOpStatsView) GetTsOk() (*int64, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *PerformanceAdvisorOpStatsView) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given int64 and assigns it to the Ts field.
func (o *PerformanceAdvisorOpStatsView) SetTs(v int64) {
	o.Ts = &v
}

func (o PerformanceAdvisorOpStatsView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PerformanceAdvisorOpStatsView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: ms is readOnly
	// skip: nReturned is readOnly
	// skip: nScanned is readOnly
	// skip: ts is readOnly
	return toSerialize, nil
}

type NullablePerformanceAdvisorOpStatsView struct {
	value *PerformanceAdvisorOpStatsView
	isSet bool
}

func (v NullablePerformanceAdvisorOpStatsView) Get() *PerformanceAdvisorOpStatsView {
	return v.value
}

func (v *NullablePerformanceAdvisorOpStatsView) Set(val *PerformanceAdvisorOpStatsView) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformanceAdvisorOpStatsView) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformanceAdvisorOpStatsView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformanceAdvisorOpStatsView(val *PerformanceAdvisorOpStatsView) *NullablePerformanceAdvisorOpStatsView {
	return &NullablePerformanceAdvisorOpStatsView{value: val, isSet: true}
}

func (v NullablePerformanceAdvisorOpStatsView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformanceAdvisorOpStatsView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


