/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// CloudProviderAccessEncryptionAtRestFeatureUsageAllOf struct for CloudProviderAccessEncryptionAtRestFeatureUsageAllOf
type CloudProviderAccessEncryptionAtRestFeatureUsageAllOf struct {
	// Object that contains the identifying characteristics of the Amazon Web Services (AWS) Key Management Service (KMS). This field always returns a null value.
	FeatureId map[string]interface{} `json:"featureId,omitempty"`
}

// NewCloudProviderAccessEncryptionAtRestFeatureUsageAllOf instantiates a new CloudProviderAccessEncryptionAtRestFeatureUsageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudProviderAccessEncryptionAtRestFeatureUsageAllOf() *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf {
	this := CloudProviderAccessEncryptionAtRestFeatureUsageAllOf{}
	return &this
}

// NewCloudProviderAccessEncryptionAtRestFeatureUsageAllOfWithDefaults instantiates a new CloudProviderAccessEncryptionAtRestFeatureUsageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudProviderAccessEncryptionAtRestFeatureUsageAllOfWithDefaults() *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf {
	this := CloudProviderAccessEncryptionAtRestFeatureUsageAllOf{}
	return &this
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf) GetFeatureId() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf) GetFeatureIdOk() (map[string]interface{}, bool) {
	if o == nil || o.FeatureId == nil {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf) HasFeatureId() bool {
	if o != nil && o.FeatureId != nil {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given map[string]interface{} and assigns it to the FeatureId field.
func (o *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf) SetFeatureId(v map[string]interface{}) {
	o.FeatureId = v
}

func (o CloudProviderAccessEncryptionAtRestFeatureUsageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FeatureId != nil {
		toSerialize["featureId"] = o.FeatureId
	}
	return json.Marshal(toSerialize)
}

type NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf struct {
	value *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf
	isSet bool
}

func (v NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf) Get() *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf {
	return v.value
}

func (v *NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf) Set(val *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf(val *CloudProviderAccessEncryptionAtRestFeatureUsageAllOf) *NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf {
	return &NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf{value: val, isSet: true}
}

func (v NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudProviderAccessEncryptionAtRestFeatureUsageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


