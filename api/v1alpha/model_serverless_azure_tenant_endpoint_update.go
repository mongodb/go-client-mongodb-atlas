/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// ServerlessAzureTenantEndpointUpdate Updates to a serverless Azure tenant endpoint.
type ServerlessAzureTenantEndpointUpdate struct {
	// Unique string that identifies the Azure private endpoint's network interface for this private endpoint service.
	CloudProviderEndpointId *string `json:"cloudProviderEndpointId,omitempty"`
	// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
	PrivateEndpointIpAddress *string `json:"privateEndpointIpAddress,omitempty"`
}

// NewServerlessAzureTenantEndpointUpdate instantiates a new ServerlessAzureTenantEndpointUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerlessAzureTenantEndpointUpdate() *ServerlessAzureTenantEndpointUpdate {
	this := ServerlessAzureTenantEndpointUpdate{}
	return &this
}

// NewServerlessAzureTenantEndpointUpdateWithDefaults instantiates a new ServerlessAzureTenantEndpointUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerlessAzureTenantEndpointUpdateWithDefaults() *ServerlessAzureTenantEndpointUpdate {
	this := ServerlessAzureTenantEndpointUpdate{}
	return &this
}

// GetCloudProviderEndpointId returns the CloudProviderEndpointId field value if set, zero value otherwise.
func (o *ServerlessAzureTenantEndpointUpdate) GetCloudProviderEndpointId() string {
	if o == nil || o.CloudProviderEndpointId == nil {
		var ret string
		return ret
	}
	return *o.CloudProviderEndpointId
}

// GetCloudProviderEndpointIdOk returns a tuple with the CloudProviderEndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerlessAzureTenantEndpointUpdate) GetCloudProviderEndpointIdOk() (*string, bool) {
	if o == nil || o.CloudProviderEndpointId == nil {
		return nil, false
	}
	return o.CloudProviderEndpointId, true
}

// HasCloudProviderEndpointId returns a boolean if a field has been set.
func (o *ServerlessAzureTenantEndpointUpdate) HasCloudProviderEndpointId() bool {
	if o != nil && o.CloudProviderEndpointId != nil {
		return true
	}

	return false
}

// SetCloudProviderEndpointId gets a reference to the given string and assigns it to the CloudProviderEndpointId field.
func (o *ServerlessAzureTenantEndpointUpdate) SetCloudProviderEndpointId(v string) {
	o.CloudProviderEndpointId = &v
}

// GetPrivateEndpointIpAddress returns the PrivateEndpointIpAddress field value if set, zero value otherwise.
func (o *ServerlessAzureTenantEndpointUpdate) GetPrivateEndpointIpAddress() string {
	if o == nil || o.PrivateEndpointIpAddress == nil {
		var ret string
		return ret
	}
	return *o.PrivateEndpointIpAddress
}

// GetPrivateEndpointIpAddressOk returns a tuple with the PrivateEndpointIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerlessAzureTenantEndpointUpdate) GetPrivateEndpointIpAddressOk() (*string, bool) {
	if o == nil || o.PrivateEndpointIpAddress == nil {
		return nil, false
	}
	return o.PrivateEndpointIpAddress, true
}

// HasPrivateEndpointIpAddress returns a boolean if a field has been set.
func (o *ServerlessAzureTenantEndpointUpdate) HasPrivateEndpointIpAddress() bool {
	if o != nil && o.PrivateEndpointIpAddress != nil {
		return true
	}

	return false
}

// SetPrivateEndpointIpAddress gets a reference to the given string and assigns it to the PrivateEndpointIpAddress field.
func (o *ServerlessAzureTenantEndpointUpdate) SetPrivateEndpointIpAddress(v string) {
	o.PrivateEndpointIpAddress = &v
}

func (o ServerlessAzureTenantEndpointUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudProviderEndpointId != nil {
		toSerialize["cloudProviderEndpointId"] = o.CloudProviderEndpointId
	}
	if o.PrivateEndpointIpAddress != nil {
		toSerialize["privateEndpointIpAddress"] = o.PrivateEndpointIpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableServerlessAzureTenantEndpointUpdate struct {
	value *ServerlessAzureTenantEndpointUpdate
	isSet bool
}

func (v NullableServerlessAzureTenantEndpointUpdate) Get() *ServerlessAzureTenantEndpointUpdate {
	return v.value
}

func (v *NullableServerlessAzureTenantEndpointUpdate) Set(val *ServerlessAzureTenantEndpointUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableServerlessAzureTenantEndpointUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableServerlessAzureTenantEndpointUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerlessAzureTenantEndpointUpdate(val *ServerlessAzureTenantEndpointUpdate) *NullableServerlessAzureTenantEndpointUpdate {
	return &NullableServerlessAzureTenantEndpointUpdate{value: val, isSet: true}
}

func (v NullableServerlessAzureTenantEndpointUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerlessAzureTenantEndpointUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


