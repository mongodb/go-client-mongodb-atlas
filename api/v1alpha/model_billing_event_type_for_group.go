/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
	"fmt"
)

// BillingEventTypeForGroup Unique identifier of event type.
type BillingEventTypeForGroup string

// List of BillingEventTypeForGroup
const (
	BILLINGEVENTTYPEFORGROUP_CREDIT_CARD_CURRENT BillingEventTypeForGroup = "CREDIT_CARD_CURRENT"
	BILLINGEVENTTYPEFORGROUP_CREDIT_CARD_ABOUT_TO_EXPIRE BillingEventTypeForGroup = "CREDIT_CARD_ABOUT_TO_EXPIRE"
	BILLINGEVENTTYPEFORGROUP_PENDING_INVOICE_UNDER_THRESHOLD BillingEventTypeForGroup = "PENDING_INVOICE_UNDER_THRESHOLD"
	BILLINGEVENTTYPEFORGROUP_PENDING_INVOICE_OVER_THRESHOLD BillingEventTypeForGroup = "PENDING_INVOICE_OVER_THRESHOLD"
	BILLINGEVENTTYPEFORGROUP_DAILY_BILL_UNDER_THRESHOLD BillingEventTypeForGroup = "DAILY_BILL_UNDER_THRESHOLD"
	BILLINGEVENTTYPEFORGROUP_DAILY_BILL_OVER_THRESHOLD BillingEventTypeForGroup = "DAILY_BILL_OVER_THRESHOLD"
	BILLINGEVENTTYPEFORGROUP_CHARGE_SUCCEEDED BillingEventTypeForGroup = "CHARGE_SUCCEEDED"
	BILLINGEVENTTYPEFORGROUP_CHARGE_FAILED BillingEventTypeForGroup = "CHARGE_FAILED"
	BILLINGEVENTTYPEFORGROUP_CHARGE_PROCESSING BillingEventTypeForGroup = "CHARGE_PROCESSING"
	BILLINGEVENTTYPEFORGROUP_CHARGE_PENDING_REVERSAL BillingEventTypeForGroup = "CHARGE_PENDING_REVERSAL"
	BILLINGEVENTTYPEFORGROUP_BRAINTREE_CHARGE_FAILED BillingEventTypeForGroup = "BRAINTREE_CHARGE_FAILED"
	BILLINGEVENTTYPEFORGROUP_INVOICE_CLOSED BillingEventTypeForGroup = "INVOICE_CLOSED"
	BILLINGEVENTTYPEFORGROUP_CHECK_PAYMENT_RECEIVED BillingEventTypeForGroup = "CHECK_PAYMENT_RECEIVED"
	BILLINGEVENTTYPEFORGROUP_WIRE_TRANSFER_PAYMENT_RECEIVED BillingEventTypeForGroup = "WIRE_TRANSFER_PAYMENT_RECEIVED"
	BILLINGEVENTTYPEFORGROUP_DISCOUNT_APPLIED BillingEventTypeForGroup = "DISCOUNT_APPLIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_ISSUED BillingEventTypeForGroup = "CREDIT_ISSUED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_PULLED_FWD BillingEventTypeForGroup = "CREDIT_PULLED_FWD"
	BILLINGEVENTTYPEFORGROUP_CREDIT_START_DATE_MODIFIED BillingEventTypeForGroup = "CREDIT_START_DATE_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_END_DATE_MODIFIED BillingEventTypeForGroup = "CREDIT_END_DATE_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_ELASTIC_INVOICING_MODIFIED BillingEventTypeForGroup = "CREDIT_ELASTIC_INVOICING_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_TYPE_MODIFIED BillingEventTypeForGroup = "CREDIT_TYPE_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_AMOUNT_CENTS_MODIFIED BillingEventTypeForGroup = "CREDIT_AMOUNT_CENTS_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_AMOUNT_REMAINING_CENTS_MODIFIED BillingEventTypeForGroup = "CREDIT_AMOUNT_REMAINING_CENTS_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_TOTAL_BILLED_CENTS_MODIFIED BillingEventTypeForGroup = "CREDIT_TOTAL_BILLED_CENTS_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_AWS_CUSTOMER_ID_MODIFIED BillingEventTypeForGroup = "CREDIT_AWS_CUSTOMER_ID_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_AWS_PRODUCT_CODE_MODIFIED BillingEventTypeForGroup = "CREDIT_AWS_PRODUCT_CODE_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_GCP_MARKETPLACE_ENTITLEMENT_ID_MODIFIED BillingEventTypeForGroup = "CREDIT_GCP_MARKETPLACE_ENTITLEMENT_ID_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_AZURE_SUBSCRIPTION_ID_MODIFIED BillingEventTypeForGroup = "CREDIT_AZURE_SUBSCRIPTION_ID_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_SFOLI_MODIFIED BillingEventTypeForGroup = "CREDIT_SFOLI_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_CREDIT_AMOUNT_MODIFIED BillingEventTypeForGroup = "CREDIT_AMOUNT_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_PROMO_CODE_APPLIED BillingEventTypeForGroup = "PROMO_CODE_APPLIED"
	BILLINGEVENTTYPEFORGROUP_PAYMENT_FORGIVEN BillingEventTypeForGroup = "PAYMENT_FORGIVEN"
	BILLINGEVENTTYPEFORGROUP_REFUND_ISSUED BillingEventTypeForGroup = "REFUND_ISSUED"
	BILLINGEVENTTYPEFORGROUP_ACCOUNT_DOWNGRADED BillingEventTypeForGroup = "ACCOUNT_DOWNGRADED"
	BILLINGEVENTTYPEFORGROUP_ACCOUNT_UPGRADED BillingEventTypeForGroup = "ACCOUNT_UPGRADED"
	BILLINGEVENTTYPEFORGROUP_ACCOUNT_MODIFIED BillingEventTypeForGroup = "ACCOUNT_MODIFIED"
	BILLINGEVENTTYPEFORGROUP_SUPPORT_PLAN_ACTIVATED BillingEventTypeForGroup = "SUPPORT_PLAN_ACTIVATED"
	BILLINGEVENTTYPEFORGROUP_SUPPORT_PLAN_CANCELLED BillingEventTypeForGroup = "SUPPORT_PLAN_CANCELLED"
	BILLINGEVENTTYPEFORGROUP_SUPPORT_PLAN_CANCELLATION_SCHEDULED BillingEventTypeForGroup = "SUPPORT_PLAN_CANCELLATION_SCHEDULED"
	BILLINGEVENTTYPEFORGROUP_INITIATE_SALESFORCE_SERVICE_CLOUD_SYNC BillingEventTypeForGroup = "INITIATE_SALESFORCE_SERVICE_CLOUD_SYNC"
	BILLINGEVENTTYPEFORGROUP_INVOICE_ADDRESS_CHANGED BillingEventTypeForGroup = "INVOICE_ADDRESS_CHANGED"
	BILLINGEVENTTYPEFORGROUP_INVOICE_ADDRESS_ADDED BillingEventTypeForGroup = "INVOICE_ADDRESS_ADDED"
	BILLINGEVENTTYPEFORGROUP_PREPAID_PLAN_ACTIVATED BillingEventTypeForGroup = "PREPAID_PLAN_ACTIVATED"
	BILLINGEVENTTYPEFORGROUP_ELASTIC_INVOICING_MODE_ACTIVATED BillingEventTypeForGroup = "ELASTIC_INVOICING_MODE_ACTIVATED"
	BILLINGEVENTTYPEFORGROUP_ELASTIC_INVOICING_MODE_DEACTIVATED BillingEventTypeForGroup = "ELASTIC_INVOICING_MODE_DEACTIVATED"
	BILLINGEVENTTYPEFORGROUP_TERMINATE_PAID_SERVICES BillingEventTypeForGroup = "TERMINATE_PAID_SERVICES"
	BILLINGEVENTTYPEFORGROUP_BILLING_EMAIL_ADDRESS_ADDED BillingEventTypeForGroup = "BILLING_EMAIL_ADDRESS_ADDED"
	BILLINGEVENTTYPEFORGROUP_BILLING_EMAIL_ADDRESS_CHANGED BillingEventTypeForGroup = "BILLING_EMAIL_ADDRESS_CHANGED"
	BILLINGEVENTTYPEFORGROUP_BILLING_EMAIL_ADDRESS_REMOVED BillingEventTypeForGroup = "BILLING_EMAIL_ADDRESS_REMOVED"
)

// All allowed values of BillingEventTypeForGroup enum
var AllowedBillingEventTypeForGroupEnumValues = []BillingEventTypeForGroup{
	"CREDIT_CARD_CURRENT",
	"CREDIT_CARD_ABOUT_TO_EXPIRE",
	"PENDING_INVOICE_UNDER_THRESHOLD",
	"PENDING_INVOICE_OVER_THRESHOLD",
	"DAILY_BILL_UNDER_THRESHOLD",
	"DAILY_BILL_OVER_THRESHOLD",
	"CHARGE_SUCCEEDED",
	"CHARGE_FAILED",
	"CHARGE_PROCESSING",
	"CHARGE_PENDING_REVERSAL",
	"BRAINTREE_CHARGE_FAILED",
	"INVOICE_CLOSED",
	"CHECK_PAYMENT_RECEIVED",
	"WIRE_TRANSFER_PAYMENT_RECEIVED",
	"DISCOUNT_APPLIED",
	"CREDIT_ISSUED",
	"CREDIT_PULLED_FWD",
	"CREDIT_START_DATE_MODIFIED",
	"CREDIT_END_DATE_MODIFIED",
	"CREDIT_ELASTIC_INVOICING_MODIFIED",
	"CREDIT_TYPE_MODIFIED",
	"CREDIT_AMOUNT_CENTS_MODIFIED",
	"CREDIT_AMOUNT_REMAINING_CENTS_MODIFIED",
	"CREDIT_TOTAL_BILLED_CENTS_MODIFIED",
	"CREDIT_AWS_CUSTOMER_ID_MODIFIED",
	"CREDIT_AWS_PRODUCT_CODE_MODIFIED",
	"CREDIT_GCP_MARKETPLACE_ENTITLEMENT_ID_MODIFIED",
	"CREDIT_AZURE_SUBSCRIPTION_ID_MODIFIED",
	"CREDIT_SFOLI_MODIFIED",
	"CREDIT_AMOUNT_MODIFIED",
	"PROMO_CODE_APPLIED",
	"PAYMENT_FORGIVEN",
	"REFUND_ISSUED",
	"ACCOUNT_DOWNGRADED",
	"ACCOUNT_UPGRADED",
	"ACCOUNT_MODIFIED",
	"SUPPORT_PLAN_ACTIVATED",
	"SUPPORT_PLAN_CANCELLED",
	"SUPPORT_PLAN_CANCELLATION_SCHEDULED",
	"INITIATE_SALESFORCE_SERVICE_CLOUD_SYNC",
	"INVOICE_ADDRESS_CHANGED",
	"INVOICE_ADDRESS_ADDED",
	"PREPAID_PLAN_ACTIVATED",
	"ELASTIC_INVOICING_MODE_ACTIVATED",
	"ELASTIC_INVOICING_MODE_DEACTIVATED",
	"TERMINATE_PAID_SERVICES",
	"BILLING_EMAIL_ADDRESS_ADDED",
	"BILLING_EMAIL_ADDRESS_CHANGED",
	"BILLING_EMAIL_ADDRESS_REMOVED",
}

func (v *BillingEventTypeForGroup) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BillingEventTypeForGroup(value)
	for _, existing := range AllowedBillingEventTypeForGroupEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BillingEventTypeForGroup", value)
}

// NewBillingEventTypeForGroupFromValue returns a pointer to a valid BillingEventTypeForGroup
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBillingEventTypeForGroupFromValue(v string) (*BillingEventTypeForGroup, error) {
	ev := BillingEventTypeForGroup(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BillingEventTypeForGroup: valid values are %v", v, AllowedBillingEventTypeForGroupEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BillingEventTypeForGroup) IsValid() bool {
	for _, existing := range AllowedBillingEventTypeForGroupEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BillingEventTypeForGroup value
func (v BillingEventTypeForGroup) Ptr() *BillingEventTypeForGroup {
	return &v
}

type NullableBillingEventTypeForGroup struct {
	value *BillingEventTypeForGroup
	isSet bool
}

func (v NullableBillingEventTypeForGroup) Get() *BillingEventTypeForGroup {
	return v.value
}

func (v *NullableBillingEventTypeForGroup) Set(val *BillingEventTypeForGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingEventTypeForGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingEventTypeForGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingEventTypeForGroup(val *BillingEventTypeForGroup) *NullableBillingEventTypeForGroup {
	return &NullableBillingEventTypeForGroup{value: val, isSet: true}
}

func (v NullableBillingEventTypeForGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingEventTypeForGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

