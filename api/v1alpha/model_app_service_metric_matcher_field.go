/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
	"fmt"
)

// AppServiceMetricMatcherField Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.
type AppServiceMetricMatcherField string

// List of AppServiceMetricMatcherField
const (
	APPSERVICEMETRICMATCHERFIELD_APPLICATION_ID AppServiceMetricMatcherField = "APPLICATION_ID"
)

// All allowed values of AppServiceMetricMatcherField enum
var AllowedAppServiceMetricMatcherFieldEnumValues = []AppServiceMetricMatcherField{
	"APPLICATION_ID",
}

func (v *AppServiceMetricMatcherField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AppServiceMetricMatcherField(value)
	for _, existing := range AllowedAppServiceMetricMatcherFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AppServiceMetricMatcherField", value)
}

// NewAppServiceMetricMatcherFieldFromValue returns a pointer to a valid AppServiceMetricMatcherField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAppServiceMetricMatcherFieldFromValue(v string) (*AppServiceMetricMatcherField, error) {
	ev := AppServiceMetricMatcherField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AppServiceMetricMatcherField: valid values are %v", v, AllowedAppServiceMetricMatcherFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AppServiceMetricMatcherField) IsValid() bool {
	for _, existing := range AllowedAppServiceMetricMatcherFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AppServiceMetricMatcherField value
func (v AppServiceMetricMatcherField) Ptr() *AppServiceMetricMatcherField {
	return &v
}


