/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// AppServiceMetricMatcherView Rules to apply when comparing an app service metric against this alert configuration.
type AppServiceMetricMatcherView struct {
	FieldName *AppServiceMetricMatcherField `json:"fieldName,omitempty"`
	// Comparison operator to apply when checking the current metric value against **matcher[n].value**.
	Operator *string `json:"operator,omitempty"`
	// Value to match or exceed using the specified **matchers.operator**.
	Value *string `json:"value,omitempty"`
}

// NewAppServiceMetricMatcherView instantiates a new AppServiceMetricMatcherView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppServiceMetricMatcherView() *AppServiceMetricMatcherView {
	this := AppServiceMetricMatcherView{}
	return &this
}

// NewAppServiceMetricMatcherViewWithDefaults instantiates a new AppServiceMetricMatcherView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppServiceMetricMatcherViewWithDefaults() *AppServiceMetricMatcherView {
	this := AppServiceMetricMatcherView{}
	return &this
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *AppServiceMetricMatcherView) GetFieldName() AppServiceMetricMatcherField {
	if o == nil || o.FieldName == nil {
		var ret AppServiceMetricMatcherField
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppServiceMetricMatcherView) GetFieldNameOk() (*AppServiceMetricMatcherField, bool) {
	if o == nil || o.FieldName == nil {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *AppServiceMetricMatcherView) HasFieldName() bool {
	if o != nil && o.FieldName != nil {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given AppServiceMetricMatcherField and assigns it to the FieldName field.
func (o *AppServiceMetricMatcherView) SetFieldName(v AppServiceMetricMatcherField) {
	o.FieldName = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *AppServiceMetricMatcherView) GetOperator() string {
	if o == nil || o.Operator == nil {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppServiceMetricMatcherView) GetOperatorOk() (*string, bool) {
	if o == nil || o.Operator == nil {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *AppServiceMetricMatcherView) HasOperator() bool {
	if o != nil && o.Operator != nil {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *AppServiceMetricMatcherView) SetOperator(v string) {
	o.Operator = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AppServiceMetricMatcherView) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppServiceMetricMatcherView) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AppServiceMetricMatcherView) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AppServiceMetricMatcherView) SetValue(v string) {
	o.Value = &v
}

func (o AppServiceMetricMatcherView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldName != nil {
		toSerialize["fieldName"] = o.FieldName
	}
	if o.Operator != nil {
		toSerialize["operator"] = o.Operator
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAppServiceMetricMatcherView struct {
	value *AppServiceMetricMatcherView
	isSet bool
}

func (v NullableAppServiceMetricMatcherView) Get() *AppServiceMetricMatcherView {
	return v.value
}

func (v *NullableAppServiceMetricMatcherView) Set(val *AppServiceMetricMatcherView) {
	v.value = val
	v.isSet = true
}

func (v NullableAppServiceMetricMatcherView) IsSet() bool {
	return v.isSet
}

func (v *NullableAppServiceMetricMatcherView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppServiceMetricMatcherView(val *AppServiceMetricMatcherView) *NullableAppServiceMetricMatcherView {
	return &NullableAppServiceMetricMatcherView{value: val, isSet: true}
}

func (v NullableAppServiceMetricMatcherView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppServiceMetricMatcherView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


