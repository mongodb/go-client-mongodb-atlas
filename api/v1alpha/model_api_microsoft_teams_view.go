/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// ApiMicrosoftTeamsView Details to integrate one Microsoft Teams account with one MongoDB Cloud project.
type ApiMicrosoftTeamsView struct {
	// Endpoint web address of the Microsoft Teams webhook to which MongoDB Cloud sends notifications.  **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
	MicrosoftTeamsWebhookUrl string `json:"microsoftTeamsWebhookUrl"`
}

// NewApiMicrosoftTeamsView instantiates a new ApiMicrosoftTeamsView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMicrosoftTeamsView() *ApiMicrosoftTeamsView {
	this := ApiMicrosoftTeamsView{}
	return &this
}

// NewApiMicrosoftTeamsViewWithDefaults instantiates a new ApiMicrosoftTeamsView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMicrosoftTeamsViewWithDefaults() *ApiMicrosoftTeamsView {
	this := ApiMicrosoftTeamsView{}
	return &this
}

// GetMicrosoftTeamsWebhookUrl returns the MicrosoftTeamsWebhookUrl field value
func (o *ApiMicrosoftTeamsView) GetMicrosoftTeamsWebhookUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MicrosoftTeamsWebhookUrl
}

// GetMicrosoftTeamsWebhookUrlOk returns a tuple with the MicrosoftTeamsWebhookUrl field value
// and a boolean to check if the value has been set.
func (o *ApiMicrosoftTeamsView) GetMicrosoftTeamsWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MicrosoftTeamsWebhookUrl, true
}

// SetMicrosoftTeamsWebhookUrl sets field value
func (o *ApiMicrosoftTeamsView) SetMicrosoftTeamsWebhookUrl(v string) {
	o.MicrosoftTeamsWebhookUrl = v
}

func (o ApiMicrosoftTeamsView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["microsoftTeamsWebhookUrl"] = o.MicrosoftTeamsWebhookUrl
	}
	return json.Marshal(toSerialize)
}

type NullableApiMicrosoftTeamsView struct {
	value *ApiMicrosoftTeamsView
	isSet bool
}

func (v NullableApiMicrosoftTeamsView) Get() *ApiMicrosoftTeamsView {
	return v.value
}

func (v *NullableApiMicrosoftTeamsView) Set(val *ApiMicrosoftTeamsView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMicrosoftTeamsView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMicrosoftTeamsView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMicrosoftTeamsView(val *ApiMicrosoftTeamsView) *NullableApiMicrosoftTeamsView {
	return &NullableApiMicrosoftTeamsView{value: val, isSet: true}
}

func (v NullableApiMicrosoftTeamsView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMicrosoftTeamsView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


