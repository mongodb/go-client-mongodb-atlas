/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// checks if the ApiPerformanceAdvisorResponseView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPerformanceAdvisorResponseView{}

// ApiPerformanceAdvisorResponseView struct for ApiPerformanceAdvisorResponseView
type ApiPerformanceAdvisorResponseView struct {
	// List of query predicates, sorts, and projections that the Performance Advisor suggests.
	Shapes []ApiPerformanceAdvisorShapeView `json:"shapes,omitempty"`
	// List that contains the documents with information about the indexes that the Performance Advisor suggests.
	SuggestedIndexes []ApiPerformanceAdvisorIndexView `json:"suggestedIndexes,omitempty"`
}

// NewApiPerformanceAdvisorResponseView instantiates a new ApiPerformanceAdvisorResponseView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPerformanceAdvisorResponseView() *ApiPerformanceAdvisorResponseView {
	this := ApiPerformanceAdvisorResponseView{}
	return &this
}

// NewApiPerformanceAdvisorResponseViewWithDefaults instantiates a new ApiPerformanceAdvisorResponseView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPerformanceAdvisorResponseViewWithDefaults() *ApiPerformanceAdvisorResponseView {
	this := ApiPerformanceAdvisorResponseView{}
	return &this
}

// GetShapes returns the Shapes field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorResponseView) GetShapes() []ApiPerformanceAdvisorShapeView {
	if o == nil || IsNil(o.Shapes) {
		var ret []ApiPerformanceAdvisorShapeView
		return ret
	}
	return o.Shapes
}

// GetShapesOk returns a tuple with the Shapes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorResponseView) GetShapesOk() ([]ApiPerformanceAdvisorShapeView, bool) {
	if o == nil || IsNil(o.Shapes) {
		return nil, false
	}
	return o.Shapes, true
}

// HasShapes returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorResponseView) HasShapes() bool {
	if o != nil && !IsNil(o.Shapes) {
		return true
	}

	return false
}

// SetShapes gets a reference to the given []ApiPerformanceAdvisorShapeView and assigns it to the Shapes field.
func (o *ApiPerformanceAdvisorResponseView) SetShapes(v []ApiPerformanceAdvisorShapeView) {
	o.Shapes = v
}

// GetSuggestedIndexes returns the SuggestedIndexes field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorResponseView) GetSuggestedIndexes() []ApiPerformanceAdvisorIndexView {
	if o == nil || IsNil(o.SuggestedIndexes) {
		var ret []ApiPerformanceAdvisorIndexView
		return ret
	}
	return o.SuggestedIndexes
}

// GetSuggestedIndexesOk returns a tuple with the SuggestedIndexes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorResponseView) GetSuggestedIndexesOk() ([]ApiPerformanceAdvisorIndexView, bool) {
	if o == nil || IsNil(o.SuggestedIndexes) {
		return nil, false
	}
	return o.SuggestedIndexes, true
}

// HasSuggestedIndexes returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorResponseView) HasSuggestedIndexes() bool {
	if o != nil && !IsNil(o.SuggestedIndexes) {
		return true
	}

	return false
}

// SetSuggestedIndexes gets a reference to the given []ApiPerformanceAdvisorIndexView and assigns it to the SuggestedIndexes field.
func (o *ApiPerformanceAdvisorResponseView) SetSuggestedIndexes(v []ApiPerformanceAdvisorIndexView) {
	o.SuggestedIndexes = v
}

func (o ApiPerformanceAdvisorResponseView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPerformanceAdvisorResponseView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: shapes is readOnly
	// skip: suggestedIndexes is readOnly
	return toSerialize, nil
}

type NullableApiPerformanceAdvisorResponseView struct {
	value *ApiPerformanceAdvisorResponseView
	isSet bool
}

func (v NullableApiPerformanceAdvisorResponseView) Get() *ApiPerformanceAdvisorResponseView {
	return v.value
}

func (v *NullableApiPerformanceAdvisorResponseView) Set(val *ApiPerformanceAdvisorResponseView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPerformanceAdvisorResponseView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPerformanceAdvisorResponseView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPerformanceAdvisorResponseView(val *ApiPerformanceAdvisorResponseView) *NullableApiPerformanceAdvisorResponseView {
	return &NullableApiPerformanceAdvisorResponseView{value: val, isSet: true}
}

func (v NullableApiPerformanceAdvisorResponseView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPerformanceAdvisorResponseView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


