/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// checks if the TargetOrgRequestView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetOrgRequestView{}

// TargetOrgRequestView struct for TargetOrgRequestView
type TargetOrgRequestView struct {
	AccessListIps []string `json:"accessListIps,omitempty"`
}

// NewTargetOrgRequestView instantiates a new TargetOrgRequestView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetOrgRequestView() *TargetOrgRequestView {
	this := TargetOrgRequestView{}
	return &this
}

// NewTargetOrgRequestViewWithDefaults instantiates a new TargetOrgRequestView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetOrgRequestViewWithDefaults() *TargetOrgRequestView {
	this := TargetOrgRequestView{}
	return &this
}

// GetAccessListIps returns the AccessListIps field value if set, zero value otherwise.
func (o *TargetOrgRequestView) GetAccessListIps() []string {
	if o == nil || IsNil(o.AccessListIps) {
		var ret []string
		return ret
	}
	return o.AccessListIps
}

// GetAccessListIpsOk returns a tuple with the AccessListIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetOrgRequestView) GetAccessListIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.AccessListIps) {
		return nil, false
	}
	return o.AccessListIps, true
}

// HasAccessListIps returns a boolean if a field has been set.
func (o *TargetOrgRequestView) HasAccessListIps() bool {
	if o != nil && !IsNil(o.AccessListIps) {
		return true
	}

	return false
}

// SetAccessListIps gets a reference to the given []string and assigns it to the AccessListIps field.
func (o *TargetOrgRequestView) SetAccessListIps(v []string) {
	o.AccessListIps = v
}

func (o TargetOrgRequestView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetOrgRequestView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessListIps) {
		toSerialize["accessListIps"] = o.AccessListIps
	}
	return toSerialize, nil
}

type NullableTargetOrgRequestView struct {
	value *TargetOrgRequestView
	isSet bool
}

func (v NullableTargetOrgRequestView) Get() *TargetOrgRequestView {
	return v.value
}

func (v *NullableTargetOrgRequestView) Set(val *TargetOrgRequestView) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetOrgRequestView) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetOrgRequestView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetOrgRequestView(val *TargetOrgRequestView) *NullableTargetOrgRequestView {
	return &NullableTargetOrgRequestView{value: val, isSet: true}
}

func (v NullableTargetOrgRequestView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetOrgRequestView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


