/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// CustomCriteriaViewAllOf struct for CustomCriteriaViewAllOf
type CustomCriteriaViewAllOf struct {
	// MongoDB find query that selects documents to archive. The specified query follows the syntax of the `db.collection.find(query)` command. This query can't use the empty document (`{}`) to return all documents. Set this parameter when **\"criteria.type\" : \"CUSTOM\"**.
	Query *string `json:"query,omitempty"`
}

// NewCustomCriteriaViewAllOf instantiates a new CustomCriteriaViewAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomCriteriaViewAllOf() *CustomCriteriaViewAllOf {
	this := CustomCriteriaViewAllOf{}
	return &this
}

// NewCustomCriteriaViewAllOfWithDefaults instantiates a new CustomCriteriaViewAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomCriteriaViewAllOfWithDefaults() *CustomCriteriaViewAllOf {
	this := CustomCriteriaViewAllOf{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *CustomCriteriaViewAllOf) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCriteriaViewAllOf) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *CustomCriteriaViewAllOf) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *CustomCriteriaViewAllOf) SetQuery(v string) {
	o.Query = &v
}

func (o CustomCriteriaViewAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	return json.Marshal(toSerialize)
}

type NullableCustomCriteriaViewAllOf struct {
	value *CustomCriteriaViewAllOf
	isSet bool
}

func (v NullableCustomCriteriaViewAllOf) Get() *CustomCriteriaViewAllOf {
	return v.value
}

func (v *NullableCustomCriteriaViewAllOf) Set(val *CustomCriteriaViewAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCriteriaViewAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCriteriaViewAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCriteriaViewAllOf(val *CustomCriteriaViewAllOf) *NullableCustomCriteriaViewAllOf {
	return &NullableCustomCriteriaViewAllOf{value: val, isSet: true}
}

func (v NullableCustomCriteriaViewAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCriteriaViewAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


