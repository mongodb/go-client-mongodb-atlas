/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// checks if the ApiAtlasNetPeerRequestBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAtlasNetPeerRequestBase{}

// ApiAtlasNetPeerRequestBase struct for ApiAtlasNetPeerRequestBase
type ApiAtlasNetPeerRequestBase struct {
	// Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.
	ContainerId string `json:"containerId"`
	// Cloud service provider that determines the needed settings to configure the network connection for a virtual private connection.
	ProviderName string `json:"providerName"`
}

// NewApiAtlasNetPeerRequestBase instantiates a new ApiAtlasNetPeerRequestBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasNetPeerRequestBase(containerId string, providerName string) *ApiAtlasNetPeerRequestBase {
	this := ApiAtlasNetPeerRequestBase{}
	this.ContainerId = containerId
	this.ProviderName = providerName
	return &this
}

// NewApiAtlasNetPeerRequestBaseWithDefaults instantiates a new ApiAtlasNetPeerRequestBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasNetPeerRequestBaseWithDefaults() *ApiAtlasNetPeerRequestBase {
	this := ApiAtlasNetPeerRequestBase{}
	return &this
}

// GetContainerId returns the ContainerId field value
func (o *ApiAtlasNetPeerRequestBase) GetContainerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasNetPeerRequestBase) GetContainerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerId, true
}

// SetContainerId sets field value
func (o *ApiAtlasNetPeerRequestBase) SetContainerId(v string) {
	o.ContainerId = v
}

// GetProviderName returns the ProviderName field value
func (o *ApiAtlasNetPeerRequestBase) GetProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasNetPeerRequestBase) GetProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderName, true
}

// SetProviderName sets field value
func (o *ApiAtlasNetPeerRequestBase) SetProviderName(v string) {
	o.ProviderName = v
}

func (o ApiAtlasNetPeerRequestBase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAtlasNetPeerRequestBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["containerId"] = o.ContainerId
	toSerialize["providerName"] = o.ProviderName
	return toSerialize, nil
}

type NullableApiAtlasNetPeerRequestBase struct {
	value *ApiAtlasNetPeerRequestBase
	isSet bool
}

func (v NullableApiAtlasNetPeerRequestBase) Get() *ApiAtlasNetPeerRequestBase {
	return v.value
}

func (v *NullableApiAtlasNetPeerRequestBase) Set(val *ApiAtlasNetPeerRequestBase) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasNetPeerRequestBase) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasNetPeerRequestBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasNetPeerRequestBase(val *ApiAtlasNetPeerRequestBase) *NullableApiAtlasNetPeerRequestBase {
	return &NullableApiAtlasNetPeerRequestBase{value: val, isSet: true}
}

func (v NullableApiAtlasNetPeerRequestBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasNetPeerRequestBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


