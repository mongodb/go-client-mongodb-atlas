/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ApiSystemStatusView struct for ApiSystemStatusView
type ApiSystemStatusView struct {
	ApiKey NullableApiKeyView `json:"apiKey"`
	// Human-readable label that identifies the service from which you requested this response.
	AppName string `json:"appName"`
	// Unique 40-hexadecimal digit hash that identifies the latest git commit merged for this application.
	Build string `json:"build"`
	// List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
	Links []Link `json:"links,omitempty"`
	// Flag that indicates whether someone enabled throttling on this service.
	Throttling bool `json:"throttling"`
}

// NewApiSystemStatusView instantiates a new ApiSystemStatusView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSystemStatusView() *ApiSystemStatusView {
	this := ApiSystemStatusView{}
	return &this
}

// NewApiSystemStatusViewWithDefaults instantiates a new ApiSystemStatusView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSystemStatusViewWithDefaults() *ApiSystemStatusView {
	this := ApiSystemStatusView{}
	return &this
}

// GetApiKey returns the ApiKey field value
// If the value is explicit nil, the zero value for ApiKeyView will be returned
func (o *ApiSystemStatusView) GetApiKey() ApiKeyView {
	if o == nil || o.ApiKey.Get() == nil {
		var ret ApiKeyView
		return ret
	}

	return *o.ApiKey.Get()
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiSystemStatusView) GetApiKeyOk() (*ApiKeyView, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiKey.Get(), o.ApiKey.IsSet()
}

// SetApiKey sets field value
func (o *ApiSystemStatusView) SetApiKey(v ApiKeyView) {
	o.ApiKey.Set(&v)
}

// GetAppName returns the AppName field value
func (o *ApiSystemStatusView) GetAppName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value
// and a boolean to check if the value has been set.
func (o *ApiSystemStatusView) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppName, true
}

// SetAppName sets field value
func (o *ApiSystemStatusView) SetAppName(v string) {
	o.AppName = v
}

// GetBuild returns the Build field value
func (o *ApiSystemStatusView) GetBuild() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Build
}

// GetBuildOk returns a tuple with the Build field value
// and a boolean to check if the value has been set.
func (o *ApiSystemStatusView) GetBuildOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Build, true
}

// SetBuild sets field value
func (o *ApiSystemStatusView) SetBuild(v string) {
	o.Build = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ApiSystemStatusView) GetLinks() []Link {
	if o == nil || o.Links == nil {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSystemStatusView) GetLinksOk() ([]Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ApiSystemStatusView) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *ApiSystemStatusView) SetLinks(v []Link) {
	o.Links = v
}

// GetThrottling returns the Throttling field value
func (o *ApiSystemStatusView) GetThrottling() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Throttling
}

// GetThrottlingOk returns a tuple with the Throttling field value
// and a boolean to check if the value has been set.
func (o *ApiSystemStatusView) GetThrottlingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Throttling, true
}

// SetThrottling sets field value
func (o *ApiSystemStatusView) SetThrottling(v bool) {
	o.Throttling = v
}

func (o ApiSystemStatusView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiKey"] = o.ApiKey.Get()
	}
	if true {
		toSerialize["appName"] = o.AppName
	}
	if true {
		toSerialize["build"] = o.Build
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if true {
		toSerialize["throttling"] = o.Throttling
	}
	return json.Marshal(toSerialize)
}

type NullableApiSystemStatusView struct {
	value *ApiSystemStatusView
	isSet bool
}

func (v NullableApiSystemStatusView) Get() *ApiSystemStatusView {
	return v.value
}

func (v *NullableApiSystemStatusView) Set(val *ApiSystemStatusView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSystemStatusView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSystemStatusView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSystemStatusView(val *ApiSystemStatusView) *NullableApiSystemStatusView {
	return &NullableApiSystemStatusView{value: val, isSet: true}
}

func (v NullableApiSystemStatusView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSystemStatusView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


