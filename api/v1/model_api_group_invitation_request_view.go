/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ApiGroupInvitationRequestView struct for ApiGroupInvitationRequestView
type ApiGroupInvitationRequestView struct {
	// One or more organization or project level roles to assign to the MongoDB Cloud user.
	Roles []string `json:"roles,omitempty"`
	// Email address of the MongoDB Cloud user invited to the specified project.
	Username *string `json:"username,omitempty"`
}

// NewApiGroupInvitationRequestView instantiates a new ApiGroupInvitationRequestView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGroupInvitationRequestView() *ApiGroupInvitationRequestView {
	this := ApiGroupInvitationRequestView{}
	return &this
}

// NewApiGroupInvitationRequestViewWithDefaults instantiates a new ApiGroupInvitationRequestView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGroupInvitationRequestViewWithDefaults() *ApiGroupInvitationRequestView {
	this := ApiGroupInvitationRequestView{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ApiGroupInvitationRequestView) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGroupInvitationRequestView) GetRolesOk() ([]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ApiGroupInvitationRequestView) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *ApiGroupInvitationRequestView) SetRoles(v []string) {
	o.Roles = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApiGroupInvitationRequestView) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGroupInvitationRequestView) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApiGroupInvitationRequestView) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApiGroupInvitationRequestView) SetUsername(v string) {
	o.Username = &v
}

func (o ApiGroupInvitationRequestView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableApiGroupInvitationRequestView struct {
	value *ApiGroupInvitationRequestView
	isSet bool
}

func (v NullableApiGroupInvitationRequestView) Get() *ApiGroupInvitationRequestView {
	return v.value
}

func (v *NullableApiGroupInvitationRequestView) Set(val *ApiGroupInvitationRequestView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGroupInvitationRequestView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGroupInvitationRequestView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGroupInvitationRequestView(val *ApiGroupInvitationRequestView) *NullableApiGroupInvitationRequestView {
	return &NullableApiGroupInvitationRequestView{value: val, isSet: true}
}

func (v NullableApiGroupInvitationRequestView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGroupInvitationRequestView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


