/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// ReturnAllNetworkPeeringConnectionsInOneProject200Response - struct for ReturnAllNetworkPeeringConnectionsInOneProject200Response
type ReturnAllNetworkPeeringConnectionsInOneProject200Response struct {
	PaginatedAWSPeerVpcView *PaginatedAWSPeerVpcView
	PaginatedAzurePeerNetworkView *PaginatedAzurePeerNetworkView
	PaginatedGCPPeerVpcView *PaginatedGCPPeerVpcView
}

// PaginatedAWSPeerVpcViewAsReturnAllNetworkPeeringConnectionsInOneProject200Response is a convenience function that returns PaginatedAWSPeerVpcView wrapped in ReturnAllNetworkPeeringConnectionsInOneProject200Response
func PaginatedAWSPeerVpcViewAsReturnAllNetworkPeeringConnectionsInOneProject200Response(v *PaginatedAWSPeerVpcView) ReturnAllNetworkPeeringConnectionsInOneProject200Response {
	return ReturnAllNetworkPeeringConnectionsInOneProject200Response{
		PaginatedAWSPeerVpcView: v,
	}
}

// PaginatedAzurePeerNetworkViewAsReturnAllNetworkPeeringConnectionsInOneProject200Response is a convenience function that returns PaginatedAzurePeerNetworkView wrapped in ReturnAllNetworkPeeringConnectionsInOneProject200Response
func PaginatedAzurePeerNetworkViewAsReturnAllNetworkPeeringConnectionsInOneProject200Response(v *PaginatedAzurePeerNetworkView) ReturnAllNetworkPeeringConnectionsInOneProject200Response {
	return ReturnAllNetworkPeeringConnectionsInOneProject200Response{
		PaginatedAzurePeerNetworkView: v,
	}
}

// PaginatedGCPPeerVpcViewAsReturnAllNetworkPeeringConnectionsInOneProject200Response is a convenience function that returns PaginatedGCPPeerVpcView wrapped in ReturnAllNetworkPeeringConnectionsInOneProject200Response
func PaginatedGCPPeerVpcViewAsReturnAllNetworkPeeringConnectionsInOneProject200Response(v *PaginatedGCPPeerVpcView) ReturnAllNetworkPeeringConnectionsInOneProject200Response {
	return ReturnAllNetworkPeeringConnectionsInOneProject200Response{
		PaginatedGCPPeerVpcView: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ReturnAllNetworkPeeringConnectionsInOneProject200Response) UnmarshalJSON(data []byte) error {
	var err error
        match := 0
        // try to unmarshal data into PaginatedAWSPeerVpcView
        err = json.Unmarshal(data, &dst.PaginatedAWSPeerVpcView)
        if err == nil {
                jsonPaginatedAWSPeerVpcView, _ := json.Marshal(dst.PaginatedAWSPeerVpcView)
                if string(jsonPaginatedAWSPeerVpcView) == "{}" { // empty struct
                        dst.PaginatedAWSPeerVpcView = nil
                } else {
                        match++
                }
        } else {
                dst.PaginatedAWSPeerVpcView = nil
        }

        // try to unmarshal data into PaginatedAzurePeerNetworkView
        err = json.Unmarshal(data, &dst.PaginatedAzurePeerNetworkView)
        if err == nil {
                jsonPaginatedAzurePeerNetworkView, _ := json.Marshal(dst.PaginatedAzurePeerNetworkView)
                if string(jsonPaginatedAzurePeerNetworkView) == "{}" { // empty struct
                        dst.PaginatedAzurePeerNetworkView = nil
                } else {
                        match++
                }
        } else {
                dst.PaginatedAzurePeerNetworkView = nil
        }

        // try to unmarshal data into PaginatedGCPPeerVpcView
        err = json.Unmarshal(data, &dst.PaginatedGCPPeerVpcView)
        if err == nil {
                jsonPaginatedGCPPeerVpcView, _ := json.Marshal(dst.PaginatedGCPPeerVpcView)
                if string(jsonPaginatedGCPPeerVpcView) == "{}" { // empty struct
                        dst.PaginatedGCPPeerVpcView = nil
                } else {
                        match++
                }
        } else {
                dst.PaginatedGCPPeerVpcView = nil
        }

        if match > 1 { // more than 1 match
                // reset to nil
                dst.PaginatedAWSPeerVpcView = nil
                dst.PaginatedAzurePeerNetworkView = nil
                dst.PaginatedGCPPeerVpcView = nil

                return fmt.Errorf("data matches more than one schema in oneOf(ReturnAllNetworkPeeringConnectionsInOneProject200Response)")
        } else if match == 1 {
                return nil // exactly one match
        } else { // no match
                return fmt.Errorf("data failed to match schemas in oneOf(ReturnAllNetworkPeeringConnectionsInOneProject200Response)")
        }
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ReturnAllNetworkPeeringConnectionsInOneProject200Response) MarshalJSON() ([]byte, error) {
	if src.PaginatedAWSPeerVpcView != nil {
		return json.Marshal(&src.PaginatedAWSPeerVpcView)
	}

	if src.PaginatedAzurePeerNetworkView != nil {
		return json.Marshal(&src.PaginatedAzurePeerNetworkView)
	}

	if src.PaginatedGCPPeerVpcView != nil {
		return json.Marshal(&src.PaginatedGCPPeerVpcView)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ReturnAllNetworkPeeringConnectionsInOneProject200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PaginatedAWSPeerVpcView != nil {
		return obj.PaginatedAWSPeerVpcView
	}

	if obj.PaginatedAzurePeerNetworkView != nil {
		return obj.PaginatedAzurePeerNetworkView
	}

	if obj.PaginatedGCPPeerVpcView != nil {
		return obj.PaginatedGCPPeerVpcView
	}

	// all schemas are nil
	return nil
}

type NullableReturnAllNetworkPeeringConnectionsInOneProject200Response struct {
	value *ReturnAllNetworkPeeringConnectionsInOneProject200Response
	isSet bool
}

func (v NullableReturnAllNetworkPeeringConnectionsInOneProject200Response) Get() *ReturnAllNetworkPeeringConnectionsInOneProject200Response {
	return v.value
}

func (v *NullableReturnAllNetworkPeeringConnectionsInOneProject200Response) Set(val *ReturnAllNetworkPeeringConnectionsInOneProject200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnAllNetworkPeeringConnectionsInOneProject200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnAllNetworkPeeringConnectionsInOneProject200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnAllNetworkPeeringConnectionsInOneProject200Response(val *ReturnAllNetworkPeeringConnectionsInOneProject200Response) *NullableReturnAllNetworkPeeringConnectionsInOneProject200Response {
	return &NullableReturnAllNetworkPeeringConnectionsInOneProject200Response{value: val, isSet: true}
}

func (v NullableReturnAllNetworkPeeringConnectionsInOneProject200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnAllNetworkPeeringConnectionsInOneProject200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


