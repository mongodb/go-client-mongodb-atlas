/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ApiPerformanceAdvisorIndexView struct for ApiPerformanceAdvisorIndexView
type ApiPerformanceAdvisorIndexView struct {
	// The average size of an object in the collection of this index.
	AvgObjSize *float64 `json:"avgObjSize,omitempty"`
	// Unique 24-hexadecimal digit string that identifies this index.
	Id *string `json:"id,omitempty"`
	// List that contains unique 24-hexadecimal character string that identifies the query shapes in this response that the Performance Advisor suggests.
	Impact []string `json:"impact,omitempty"`
	// List that contains documents that specify a key in the index and its sort order.
	Index []map[string]string `json:"index,omitempty"`
	// Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.
	Namespace *string `json:"namespace,omitempty"`
	// Estimated performance improvement that the suggested index provides. This value corresponds to **Impact** in the Performance Advisor user interface.
	Weight *float64 `json:"weight,omitempty"`
}

// NewApiPerformanceAdvisorIndexView instantiates a new ApiPerformanceAdvisorIndexView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPerformanceAdvisorIndexView() *ApiPerformanceAdvisorIndexView {
	this := ApiPerformanceAdvisorIndexView{}
	return &this
}

// NewApiPerformanceAdvisorIndexViewWithDefaults instantiates a new ApiPerformanceAdvisorIndexView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPerformanceAdvisorIndexViewWithDefaults() *ApiPerformanceAdvisorIndexView {
	this := ApiPerformanceAdvisorIndexView{}
	return &this
}

// GetAvgObjSize returns the AvgObjSize field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorIndexView) GetAvgObjSize() float64 {
	if o == nil || o.AvgObjSize == nil {
		var ret float64
		return ret
	}
	return *o.AvgObjSize
}

// GetAvgObjSizeOk returns a tuple with the AvgObjSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorIndexView) GetAvgObjSizeOk() (*float64, bool) {
	if o == nil || o.AvgObjSize == nil {
		return nil, false
	}
	return o.AvgObjSize, true
}

// HasAvgObjSize returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorIndexView) HasAvgObjSize() bool {
	if o != nil && o.AvgObjSize != nil {
		return true
	}

	return false
}

// SetAvgObjSize gets a reference to the given float64 and assigns it to the AvgObjSize field.
func (o *ApiPerformanceAdvisorIndexView) SetAvgObjSize(v float64) {
	o.AvgObjSize = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorIndexView) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorIndexView) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorIndexView) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiPerformanceAdvisorIndexView) SetId(v string) {
	o.Id = &v
}

// GetImpact returns the Impact field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorIndexView) GetImpact() []string {
	if o == nil || o.Impact == nil {
		var ret []string
		return ret
	}
	return o.Impact
}

// GetImpactOk returns a tuple with the Impact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorIndexView) GetImpactOk() ([]string, bool) {
	if o == nil || o.Impact == nil {
		return nil, false
	}
	return o.Impact, true
}

// HasImpact returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorIndexView) HasImpact() bool {
	if o != nil && o.Impact != nil {
		return true
	}

	return false
}

// SetImpact gets a reference to the given []string and assigns it to the Impact field.
func (o *ApiPerformanceAdvisorIndexView) SetImpact(v []string) {
	o.Impact = v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorIndexView) GetIndex() []map[string]string {
	if o == nil || o.Index == nil {
		var ret []map[string]string
		return ret
	}
	return o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorIndexView) GetIndexOk() ([]map[string]string, bool) {
	if o == nil || o.Index == nil {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorIndexView) HasIndex() bool {
	if o != nil && o.Index != nil {
		return true
	}

	return false
}

// SetIndex gets a reference to the given []map[string]string and assigns it to the Index field.
func (o *ApiPerformanceAdvisorIndexView) SetIndex(v []map[string]string) {
	o.Index = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorIndexView) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorIndexView) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorIndexView) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ApiPerformanceAdvisorIndexView) SetNamespace(v string) {
	o.Namespace = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ApiPerformanceAdvisorIndexView) GetWeight() float64 {
	if o == nil || o.Weight == nil {
		var ret float64
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPerformanceAdvisorIndexView) GetWeightOk() (*float64, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ApiPerformanceAdvisorIndexView) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float64 and assigns it to the Weight field.
func (o *ApiPerformanceAdvisorIndexView) SetWeight(v float64) {
	o.Weight = &v
}

func (o ApiPerformanceAdvisorIndexView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvgObjSize != nil {
		toSerialize["avgObjSize"] = o.AvgObjSize
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Impact != nil {
		toSerialize["impact"] = o.Impact
	}
	if o.Index != nil {
		toSerialize["index"] = o.Index
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullableApiPerformanceAdvisorIndexView struct {
	value *ApiPerformanceAdvisorIndexView
	isSet bool
}

func (v NullableApiPerformanceAdvisorIndexView) Get() *ApiPerformanceAdvisorIndexView {
	return v.value
}

func (v *NullableApiPerformanceAdvisorIndexView) Set(val *ApiPerformanceAdvisorIndexView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPerformanceAdvisorIndexView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPerformanceAdvisorIndexView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPerformanceAdvisorIndexView(val *ApiPerformanceAdvisorIndexView) *NullableApiPerformanceAdvisorIndexView {
	return &NullableApiPerformanceAdvisorIndexView{value: val, isSet: true}
}

func (v NullableApiPerformanceAdvisorIndexView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPerformanceAdvisorIndexView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


