/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
)

// ClusterOutageSimulation struct for ClusterOutageSimulation
type ClusterOutageSimulation struct {
	// Human-readable label that identifies the cluster that undergoes outage simulation.
	ClusterName *string `json:"clusterName,omitempty"`
	// Unique 24-hexadecimal character string that identifies the project that contains the cluster to undergo outage simulation.
	GroupId *string `json:"groupId,omitempty"`
	// Unique 24-hexadecimal character string that identifies the outage simulation.
	Id *string `json:"id,omitempty"`
	// List of settings that specify the type of cluster outage simulation.
	OutageFilters []ClusterOutageSimulationOutageFilter `json:"outageFilters,omitempty"`
	// Date and time when MongoDB Cloud started the regional outage simulation.
	StartRequestDate *time.Time `json:"startRequestDate,omitempty"`
	// Phase of the outage simulation.  | State       | Indication | |-------------|------------| | `START_REQUESTED`    | User has requested cluster outage simulation.| | `STARTING`           | MongoDB Cloud is starting cluster outage simulation.| | `SIMULATING`         | MongoDB Cloud is simulating cluster outage.| | `RECOVERY_REQUESTED` | User has requested recovery from the simulated outage.| | `RECOVERING`         | MongoDB Cloud is recovering the cluster from the simulated outage.| | `COMPLETE`           | MongoDB Cloud has completed the cluster outage simulation.|
	State *string `json:"state,omitempty"`
}

// NewClusterOutageSimulation instantiates a new ClusterOutageSimulation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterOutageSimulation() *ClusterOutageSimulation {
	this := ClusterOutageSimulation{}
	return &this
}

// NewClusterOutageSimulationWithDefaults instantiates a new ClusterOutageSimulation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterOutageSimulationWithDefaults() *ClusterOutageSimulation {
	this := ClusterOutageSimulation{}
	return &this
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *ClusterOutageSimulation) GetClusterName() string {
	if o == nil || o.ClusterName == nil {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOutageSimulation) GetClusterNameOk() (*string, bool) {
	if o == nil || o.ClusterName == nil {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *ClusterOutageSimulation) HasClusterName() bool {
	if o != nil && o.ClusterName != nil {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *ClusterOutageSimulation) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ClusterOutageSimulation) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOutageSimulation) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ClusterOutageSimulation) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *ClusterOutageSimulation) SetGroupId(v string) {
	o.GroupId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterOutageSimulation) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOutageSimulation) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterOutageSimulation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClusterOutageSimulation) SetId(v string) {
	o.Id = &v
}

// GetOutageFilters returns the OutageFilters field value if set, zero value otherwise.
func (o *ClusterOutageSimulation) GetOutageFilters() []ClusterOutageSimulationOutageFilter {
	if o == nil || o.OutageFilters == nil {
		var ret []ClusterOutageSimulationOutageFilter
		return ret
	}
	return o.OutageFilters
}

// GetOutageFiltersOk returns a tuple with the OutageFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOutageSimulation) GetOutageFiltersOk() ([]ClusterOutageSimulationOutageFilter, bool) {
	if o == nil || o.OutageFilters == nil {
		return nil, false
	}
	return o.OutageFilters, true
}

// HasOutageFilters returns a boolean if a field has been set.
func (o *ClusterOutageSimulation) HasOutageFilters() bool {
	if o != nil && o.OutageFilters != nil {
		return true
	}

	return false
}

// SetOutageFilters gets a reference to the given []ClusterOutageSimulationOutageFilter and assigns it to the OutageFilters field.
func (o *ClusterOutageSimulation) SetOutageFilters(v []ClusterOutageSimulationOutageFilter) {
	o.OutageFilters = v
}

// GetStartRequestDate returns the StartRequestDate field value if set, zero value otherwise.
func (o *ClusterOutageSimulation) GetStartRequestDate() time.Time {
	if o == nil || o.StartRequestDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartRequestDate
}

// GetStartRequestDateOk returns a tuple with the StartRequestDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOutageSimulation) GetStartRequestDateOk() (*time.Time, bool) {
	if o == nil || o.StartRequestDate == nil {
		return nil, false
	}
	return o.StartRequestDate, true
}

// HasStartRequestDate returns a boolean if a field has been set.
func (o *ClusterOutageSimulation) HasStartRequestDate() bool {
	if o != nil && o.StartRequestDate != nil {
		return true
	}

	return false
}

// SetStartRequestDate gets a reference to the given time.Time and assigns it to the StartRequestDate field.
func (o *ClusterOutageSimulation) SetStartRequestDate(v time.Time) {
	o.StartRequestDate = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ClusterOutageSimulation) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOutageSimulation) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ClusterOutageSimulation) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ClusterOutageSimulation) SetState(v string) {
	o.State = &v
}

func (o ClusterOutageSimulation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterName != nil {
		toSerialize["clusterName"] = o.ClusterName
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OutageFilters != nil {
		toSerialize["outageFilters"] = o.OutageFilters
	}
	if o.StartRequestDate != nil {
		toSerialize["startRequestDate"] = o.StartRequestDate
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableClusterOutageSimulation struct {
	value *ClusterOutageSimulation
	isSet bool
}

func (v NullableClusterOutageSimulation) Get() *ClusterOutageSimulation {
	return v.value
}

func (v *NullableClusterOutageSimulation) Set(val *ClusterOutageSimulation) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterOutageSimulation) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterOutageSimulation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterOutageSimulation(val *ClusterOutageSimulation) *NullableClusterOutageSimulation {
	return &NullableClusterOutageSimulation{value: val, isSet: true}
}

func (v NullableClusterOutageSimulation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterOutageSimulation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


