/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// ServerlessAWSTenantEndpointUpdateAllOf struct for ServerlessAWSTenantEndpointUpdateAllOf
type ServerlessAWSTenantEndpointUpdateAllOf struct {
	// Unique string that identifies the private endpoint's network interface.
	CloudProviderEndpointId *string `json:"cloudProviderEndpointId,omitempty"`
}

// NewServerlessAWSTenantEndpointUpdateAllOf instantiates a new ServerlessAWSTenantEndpointUpdateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerlessAWSTenantEndpointUpdateAllOf() *ServerlessAWSTenantEndpointUpdateAllOf {
	this := ServerlessAWSTenantEndpointUpdateAllOf{}
	return &this
}

// NewServerlessAWSTenantEndpointUpdateAllOfWithDefaults instantiates a new ServerlessAWSTenantEndpointUpdateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerlessAWSTenantEndpointUpdateAllOfWithDefaults() *ServerlessAWSTenantEndpointUpdateAllOf {
	this := ServerlessAWSTenantEndpointUpdateAllOf{}
	return &this
}

// GetCloudProviderEndpointId returns the CloudProviderEndpointId field value if set, zero value otherwise.
func (o *ServerlessAWSTenantEndpointUpdateAllOf) GetCloudProviderEndpointId() string {
	if o == nil || o.CloudProviderEndpointId == nil {
		var ret string
		return ret
	}
	return *o.CloudProviderEndpointId
}

// GetCloudProviderEndpointIdOk returns a tuple with the CloudProviderEndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerlessAWSTenantEndpointUpdateAllOf) GetCloudProviderEndpointIdOk() (*string, bool) {
	if o == nil || o.CloudProviderEndpointId == nil {
		return nil, false
	}
	return o.CloudProviderEndpointId, true
}

// HasCloudProviderEndpointId returns a boolean if a field has been set.
func (o *ServerlessAWSTenantEndpointUpdateAllOf) HasCloudProviderEndpointId() bool {
	if o != nil && o.CloudProviderEndpointId != nil {
		return true
	}

	return false
}

// SetCloudProviderEndpointId gets a reference to the given string and assigns it to the CloudProviderEndpointId field.
func (o *ServerlessAWSTenantEndpointUpdateAllOf) SetCloudProviderEndpointId(v string) {
	o.CloudProviderEndpointId = &v
}

func (o ServerlessAWSTenantEndpointUpdateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudProviderEndpointId != nil {
		toSerialize["cloudProviderEndpointId"] = o.CloudProviderEndpointId
	}
	return json.Marshal(toSerialize)
}

type NullableServerlessAWSTenantEndpointUpdateAllOf struct {
	value *ServerlessAWSTenantEndpointUpdateAllOf
	isSet bool
}

func (v NullableServerlessAWSTenantEndpointUpdateAllOf) Get() *ServerlessAWSTenantEndpointUpdateAllOf {
	return v.value
}

func (v *NullableServerlessAWSTenantEndpointUpdateAllOf) Set(val *ServerlessAWSTenantEndpointUpdateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableServerlessAWSTenantEndpointUpdateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableServerlessAWSTenantEndpointUpdateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerlessAWSTenantEndpointUpdateAllOf(val *ServerlessAWSTenantEndpointUpdateAllOf) *NullableServerlessAWSTenantEndpointUpdateAllOf {
	return &NullableServerlessAWSTenantEndpointUpdateAllOf{value: val, isSet: true}
}

func (v NullableServerlessAWSTenantEndpointUpdateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerlessAWSTenantEndpointUpdateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


